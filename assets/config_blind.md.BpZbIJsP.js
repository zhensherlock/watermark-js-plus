import{_ as i,C as l,c as t,o as n,G as s,b3 as o}from"./chunks/framework.qjfQtuj5.js";const u=JSON.parse('{"title":"Blind Watermark Configuration","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"config/blind.md","filePath":"config/blind.md"}'),r={name:"config/blind.md"};function d(c,a,h,p,k,m){const e=l("el-backtop");return n(),t("div",null,[s(e),a[0]||(a[0]=o(`<h1 id="blind-watermark-configuration" tabindex="-1">Blind Watermark Configuration <a class="header-anchor" href="#blind-watermark-configuration" aria-label="Permalink to &quot;Blind Watermark Configuration&quot;">​</a></h1><h2 id="inheritance-note" tabindex="-1">Inheritance Note <a class="header-anchor" href="#inheritance-note" aria-label="Permalink to &quot;Inheritance Note&quot;">​</a></h2><p>This configuration <strong>inherits all options</strong> from <a href="./">Watermark Configuration Options</a>, but <strong>enforces fixed values</strong> for:</p><ul><li><code>globalAlpha</code>: Always <code>0.005</code> (cannot be modified)</li><li><code>mode</code>: Always <code>&#39;blind&#39;</code> (cannot be modified)</li></ul><h2 id="specialized-properties" tabindex="-1">Specialized Properties <a class="header-anchor" href="#specialized-properties" aria-label="Permalink to &quot;Specialized Properties&quot;">​</a></h2><h3 id="globalalpha" tabindex="-1">globalAlpha <a class="header-anchor" href="#globalalpha" aria-label="Permalink to &quot;globalAlpha&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>number</code></li><li><strong>Fixed Value:</strong> <code>0.005</code></li><li><strong>Description:</strong> Preset to ultra-low transparency for blind watermark effect. All modification attempts will be automatically overridden.</li></ul><h3 id="mode" tabindex="-1">mode <a class="header-anchor" href="#mode" aria-label="Permalink to &quot;mode&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Fixed Value:</strong> <code>&#39;blind&#39;</code></li><li><strong>Description:</strong> Locked in blind watermark mode. Changing this value has no effect.</li></ul><h2 id="technical-implementation" tabindex="-1">Technical Implementation <a class="header-anchor" href="#technical-implementation" aria-label="Permalink to &quot;Technical Implementation&quot;">​</a></h2><p>The blind watermark:</p><ol><li>Inherits all standard watermark capabilities</li><li>Automatically enforces <code>globalAlpha=0.005</code> during initialization and all updates</li><li>Permanently sets <code>mode=&#39;blind&#39;</code> (even if other values are provided)</li><li>Maintains all other configurable options from the parent class</li></ol><h2 id="example-usage" tabindex="-1">Example Usage <a class="header-anchor" href="#example-usage" aria-label="Permalink to &quot;Example Usage&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// These values will be automatically corrected:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BlindWatermark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  globalAlpha: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Will be forced to 0.005</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  mode: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;default&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Will be forced to &#39;blind&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div>`,14))])}const b=i(r,[["render",d]]);export{u as __pageData,b as default};
