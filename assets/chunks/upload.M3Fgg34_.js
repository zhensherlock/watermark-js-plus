import{aw as g,aE as p,b4 as v,av as b,aA as u}from"./framework.CEd7LN5V.js";function F(e){for(var t=-1,s=e==null?0:e.length,a={};++t<s;){var l=e[t];a[l[0]]=l[1]}return a}function S(e){return e==null}class O extends Error{constructor(t){super(t),this.name="ElementPlusError"}}function $(e,t){throw new O(`[${e}] ${t}`)}function U(e,t){}const h="__epPropKey",n=e=>e,j=e=>g(e)&&!!e[h],x=(e,t)=>{if(!g(e)||j(e))return e;const{values:s,required:a,default:l,type:o,validator:r}=e,c={type:o,required:!!a,validator:s||r?f=>{let i=!1,d=[];if(s&&(d=Array.from(s),p(e,"default")&&d.push(l),i||(i=d.includes(f))),r&&(i||(i=r(f))),!i&&d.length>0){const w=[...new Set(d)].map(P=>JSON.stringify(P)).join(", ");v(`Invalid prop: validation failed${t?` for prop "${t}"`:""}. Expected one of [${w}], got value ${JSON.stringify(f)}.`)}return i}:void 0,[h]:!0};return p(e,"default")&&(c.default=l),c},E=e=>F(Object.entries(e).map(([t,s])=>[t,x(s,t)])),y=e=>e,L="ElUpload";class q extends Error{constructor(t,s,a,l){super(t),this.name="UploadAjaxError",this.status=s,this.method=a,this.url=l}}function m(e,t,s){let a;return s.response?a=`${s.response.error||s.response}`:s.responseText?a=`${s.responseText}`:a=`fail to ${t.method} ${e} ${s.status}`,new q(a,s.status,t.method,e)}function B(e){const t=e.responseText||e.response;if(!t)return t;try{return JSON.parse(t)}catch{return t}}const R=e=>{typeof XMLHttpRequest>"u"&&$(L,"XMLHttpRequest is undefined");const t=new XMLHttpRequest,s=e.action;t.upload&&t.upload.addEventListener("progress",o=>{const r=o;r.percent=o.total>0?o.loaded/o.total*100:0,e.onProgress(r)});const a=new FormData;if(e.data)for(const[o,r]of Object.entries(e.data))b(r)&&r.length?a.append(o,...r):a.append(o,r);a.append(e.filename,e.file,e.file.name),t.addEventListener("error",()=>{e.onError(m(s,e,t))}),t.addEventListener("load",()=>{if(t.status<200||t.status>=300)return e.onError(m(s,e,t));e.onSuccess(B(t))}),t.open(e.method,s,!0),e.withCredentials&&"withCredentials"in t&&(t.withCredentials=!0);const l=e.headers||{};if(l instanceof Headers)l.forEach((o,r)=>t.setRequestHeader(r,o));else for(const[o,r]of Object.entries(l))S(r)||t.setRequestHeader(o,String(r));return t.send(a),t},T=["text","picture","picture-card"];let A=1;const _=()=>Date.now()+A++,C=E({action:{type:String,default:"#"},headers:{type:n(Object)},method:{type:String,default:"post"},data:{type:n([Object,Function,Promise]),default:()=>y({})},multiple:{type:Boolean,default:!1},name:{type:String,default:"file"},drag:{type:Boolean,default:!1},withCredentials:Boolean,showFileList:{type:Boolean,default:!0},accept:{type:String,default:""},fileList:{type:n(Array),default:()=>y([])},autoUpload:{type:Boolean,default:!0},listType:{type:String,values:T,default:"text"},httpRequest:{type:n(Function),default:R},disabled:Boolean,limit:Number}),D=E({...C,beforeUpload:{type:n(Function),default:u},beforeRemove:{type:n(Function)},onRemove:{type:n(Function),default:u},onChange:{type:n(Function),default:u},onPreview:{type:n(Function),default:u},onSuccess:{type:n(Function),default:u},onProgress:{type:n(Function),default:u},onError:{type:n(Function),default:u},onExceed:{type:n(Function),default:u},crossorigin:{type:n(String)}});export{E as a,x as b,U as c,n as d,C as e,F as f,_ as g,D as h,S as i,y as m,$ as t,T as u};
