import{aw as g,aE as p,b5 as v,av as b,aA as u}from"./framework.Ze9oTypL.js";function F(e){for(var t=-1,r=e==null?0:e.length,s={};++t<r;){var l=e[t];s[l[0]]=l[1]}return s}function S(e){return e==null}class O extends Error{constructor(t){super(t),this.name="ElementPlusError"}}function $(e,t){throw new O(`[${e}] ${t}`)}function U(e,t){}const h="__epPropKey",n=e=>e,j=e=>g(e)&&!!e[h],x=(e,t)=>{if(!g(e)||j(e))return e;const{values:r,required:s,default:l,type:o,validator:a}=e,f={type:o,required:!!s,validator:r||a?c=>{let i=!1,d=[];if(r&&(d=Array.from(r),p(e,"default")&&d.push(l),i||(i=d.includes(c))),a&&(i||(i=a(c))),!i&&d.length>0){const w=[...new Set(d)].map(P=>JSON.stringify(P)).join(", ");v(`Invalid prop: validation failed${t?` for prop "${t}"`:""}. Expected one of [${w}], got value ${JSON.stringify(c)}.`)}return i}:void 0,[h]:!0};return p(e,"default")&&(f.default=l),f},E=e=>F(Object.entries(e).map(([t,r])=>[t,x(r,t)])),y=e=>e,L="ElUpload";class q extends Error{constructor(t,r,s,l){super(t),this.name="UploadAjaxError",this.status=r,this.method=s,this.url=l}}function m(e,t,r){let s;return r.response?s=`${r.response.error||r.response}`:r.responseText?s=`${r.responseText}`:s=`fail to ${t.method} ${e} ${r.status}`,new q(s,r.status,t.method,e)}function B(e){const t=e.responseText||e.response;if(!t)return t;try{return JSON.parse(t)}catch{return t}}const R=e=>{typeof XMLHttpRequest>"u"&&$(L,"XMLHttpRequest is undefined");const t=new XMLHttpRequest,r=e.action;t.upload&&t.upload.addEventListener("progress",o=>{const a=o;a.percent=o.total>0?o.loaded/o.total*100:0,e.onProgress(a)});const s=new FormData;if(e.data)for(const[o,a]of Object.entries(e.data))b(a)&&a.length?s.append(o,...a):s.append(o,a);s.append(e.filename,e.file,e.file.name),t.addEventListener("error",()=>{e.onError(m(r,e,t))}),t.addEventListener("load",()=>{if(t.status<200||t.status>=300)return e.onError(m(r,e,t));e.onSuccess(B(t))}),t.open(e.method,r,!0),e.withCredentials&&"withCredentials"in t&&(t.withCredentials=!0);const l=e.headers||{};if(l instanceof Headers)l.forEach((o,a)=>t.setRequestHeader(a,o));else for(const[o,a]of Object.entries(l))S(a)||t.setRequestHeader(o,String(a));return t.send(s),t},T=["text","picture","picture-card"];let A=1;const _=()=>Date.now()+A++,C=E({action:{type:String,default:"#"},headers:{type:n(Object)},method:{type:String,default:"post"},data:{type:n([Object,Function,Promise]),default:()=>y({})},multiple:Boolean,name:{type:String,default:"file"},drag:Boolean,withCredentials:Boolean,showFileList:{type:Boolean,default:!0},accept:{type:String,default:""},fileList:{type:n(Array),default:()=>y([])},autoUpload:{type:Boolean,default:!0},listType:{type:String,values:T,default:"text"},httpRequest:{type:n(Function),default:R},disabled:Boolean,limit:Number}),D=E({...C,beforeUpload:{type:n(Function),default:u},beforeRemove:{type:n(Function)},onRemove:{type:n(Function),default:u},onChange:{type:n(Function),default:u},onPreview:{type:n(Function),default:u},onSuccess:{type:n(Function),default:u},onProgress:{type:n(Function),default:u},onError:{type:n(Function),default:u},onExceed:{type:n(Function),default:u},crossorigin:{type:n(String)}});export{E as a,x as b,U as c,n as d,C as e,F as f,_ as g,D as h,S as i,y as m,$ as t,T as u};
